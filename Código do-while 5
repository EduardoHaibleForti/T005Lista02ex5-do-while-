#include <stdio.h>
#include <string.h>

int main() {
    int x = 2, y = 2; // Posição inicial do robô no centro do grid (2, 2)
    char comando[10];

    printf("Simulação de Navegação Autônoma\n");
    printf("O robô está em um grid de 5x5 (0-4 em cada eixo).\n");
    printf("Comandos disponíveis: cima, baixo, esquerda, direita, parar.\n");
    printf("Posição inicial: (%d, %d)\n", x, y);

    do {
        printf("\nDigite um comando: ");
        scanf("%s", comando);

        if (strcmp(comando, "cima") == 0) {
            if (y > 0) {
                y--;
                printf("O robô moveu para cima. Nova posição: (%d, %d)\n", x, y);
            } else {
                printf("Limite superior atingido. O robô não pode se mover para cima.\n");
            }
        } else if (strcmp(comando, "baixo") == 0) {
            if (y < 4) {
                y++;
                printf("O robô moveu para baixo. Nova posição: (%d, %d)\n", x, y);
            } else {
                printf("Limite inferior atingido. O robô não pode se mover para baixo.\n");
            }
        } else if (strcmp(comando, "esquerda") == 0) {
            if (x > 0) {
                x--;
                printf("O robô moveu para a esquerda. Nova posição: (%d, %d)\n", x, y);
            } else {
                printf("Limite esquerdo atingido. O robô não pode se mover para a esquerda.\n");
            }
        } else if (strcmp(comando, "direita") == 0) {
            if (x < 4) {
                x++;
                printf("O robô moveu para a direita. Nova posição: (%d, %d)\n", x, y);
            } else {
                printf("Limite direito atingido. O robô não pode se mover para a direita.\n");
            }
        } else if (strcmp(comando, "parar") == 0) {
            printf("Navegação encerrada pelo usuário.\n");
        } else {
            printf("Comando inválido. Tente novamente.\n");
        }

    } while (strcmp(comando, "parar") != 0);

    printf("Programa encerrado. Posição final do robô: (%d, %d)\n", x, y);

    return 0;
}
